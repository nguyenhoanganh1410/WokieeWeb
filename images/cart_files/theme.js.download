/* find this for cart scroll with small screen size cart * / */

"use strict";
var global_quantity;
var $document = $(document),
    $window = $(window),
    $body = $('body'),
    $html = $('html'),
    $ttPageContent = $('#tt-pageContent'),
    $ttFooter = $('footer'),
    $ttHeader = $('header'),
    $ttLeftColumnAside = $ttPageContent.find('.leftColumn.aside'),
    $ttFilterOptions = $ttPageContent.find('.tt-filters-options'),

    /* menu setting*/
    header_menu_timeout = 200,
    header_menu_delay = 200,   

    //header
    $ttTopPanel = $('.tt-top-panel'),
    //header stuck
    $stucknav = $ttHeader.find('.tt-stuck-nav'),
    //header menu
    $ttDesctopMenu = $ttHeader.find('.tt-desctop-menu'),
    $ttDesctopParentMenu = $ttHeader.find('.tt-desctop-parent-menu'),
    $ttMobileParentMenu = $ttHeader.find('.tt-mobile-parent-menu'),
    $ttMobileParentMenuChildren = $ttMobileParentMenu.children(),
    $ttStuckParentMenu = $ttHeader.find('.tt-stuck-parent-menu'),
    //header search
    $ttSearchObj = $ttHeader.find('.tt-search'),
    $ttDesctopParentSearch = $ttHeader.find('.tt-desctop-parent-search'),
    $ttMobileParentSearch = $ttHeader.find('.tt-mobile-parent-search'),
    $ttStuckParentSearch = $ttHeader.find('.tt-stuck-parent-search'),
    //header cart
    $ttcartObj = $ttHeader.find('.tt-cart'),
    $ttDesctopParentCart = $ttHeader.find('.tt-desctop-parent-cart'),
    $ttMobileParentCart = $ttHeader.find('.tt-mobile-parent-cart'),
    $ttStuckParentCart = $ttHeader.find('.tt-stuck-parent-cart'),
    //header account
    $ttAccountObj = $ttHeader.find('.tt-account'),
    $ttDesctopParentAccount = $ttHeader.find('.tt-desctop-parent-account'),
    $ttMobileParentAccount = $ttHeader.find('.tt-mobile-parent-account'),
    $ttStuckParentAccount = $ttHeader.find('.tt-stuck-parent-account'),
    //header langue and currency(*all in one module)
    $ttMultiObj = $ttHeader.find('.tt-multi-obj'),
    $ttDesctopParentMulti = $ttHeader.find('.tt-desctop-parent-multi'),
    $ttMobileParentMulti = $ttHeader.find('.tt-mobile-parent-multi'),
    $ttStuckParentMulti = $ttHeader.find('.tt-stuck-parent-multi'),


    // Template Blocks
    blocks = {
      ttCalendarDatepicker: $ttPageContent.find('.calendarDatepicker'),
      ttSliderBlog: $ttPageContent.find('.tt-slider-blog'),
      ttSlickMain: $ttPageContent.find('.tt-slick-main'),
      ttSliderBlogSingle: $ttPageContent.find('.tt-slider-blog-single'),
      ttVideoBlock: $('.tt-video-block'),
      ttBlogMasonry: $ttPageContent.find('.tt-blog-masonry'),
      ttPortfolioMasonry: $ttPageContent.find('.tt-portfolio-masonry'),
      ttProductMasonry: $ttPageContent.find('.tt-product-listing-masonry'),
      ttInputCounter: $('.tt-input-counter'),
      ttCollapseBlock: $('.tt-collapse-block'),
      modalVideoProduct: $('#modalVideoProduct'),
      modalAddToCart: $('#modalAddToCartProduct'),
      ttMobileProductSlider: $('.tt-mobile-product-slider'),
      ttCollapse: $ttPageContent.find('.tt-collapse'),
      ttProductListing: $ttPageContent.find('.tt-product-listing'),
      ttBtnColumnClose: $ttLeftColumnAside.find('.tt-btn-col-close'),
      ttBtnToggle: $ttFilterOptions.find('.tt-btn-toggle a'),
      ttBtnAddProduct: $ttPageContent.find('.tt_product_showmore'),
      ttProductItem: $ttPageContent.find('.tt-product, .tt-product-design02'),
      ttProductDesign02: $ttPageContent.find('.tt-product-design02'),
      ttProductDesign01: $ttPageContent.find('.tt-product'),
      ttFilterDetachOption: $ttLeftColumnAside.find('.tt-filter-detach-option'),
      ttFilterSort: $ttFilterOptions.find('.tt-sort'),
      ttShopCart: $ttPageContent.find('.tt-shopcart-table, .tt-shopcart-table-02'),
      ttSliderLookbook: $ttPageContent.find('.tt-slider-lookbook'),
      ttPortfolioContent: $ttPageContent.find('.tt-portfolio-content'),
      ttLookbook: $ttPageContent.find('.tt-lookbook'),
      ttAirSticky: $ttPageContent.find('.airSticky'),
      ttfooterMobileCollapse: $ttFooter.find('.tt-collapse-title'),
      ttBackToTop: $('.tt-back-to-top'),
      ttHeaderDropdown: $ttHeader.find('.tt-dropdown-obj'),
      mobileMenuToggle: $('.tt-menu-toggle'),
      ttCarouselProducts: $('.tt-carousel-products'),
      ttItemsCategories: $ttPageContent.find('.tt-items-categories'),
      ttDotsAbsolute: $ttPageContent.find('.tt-dots-absolute'),
      ttAlignmentImg: $ttPageContent.find('.tt-alignment-img'),
      ttProductSingleBtnZomm: $ttPageContent.find('.tt-product-single-img .tt-btn-zomm'),
      ttRevolutionPromo: $ttPageContent.find('.tt-revolution-promo'),
    };

var ttwindowWidth = window.innerWidth || $window.width();


if (blocks.ttRevolutionPromo.length) {
  setTimeout(function(){
    blocks.ttRevolutionPromo.fadeTo("90", 1);
  }, 2300);
  blocks.ttRevolutionPromo.on('click', '.tt-btn-close', function() {
    $(this).closest('.tt-revolution-promo').hide();
  });
};

if (blocks.ttItemsCategories.length) {
  ttItemsCategories();
};
if (blocks.modalAddToCart.length) {
  modalAddToCart();
};
// Mobile Menu
if (blocks.mobileMenuToggle.length) {
  blocks.mobileMenuToggle.initMM({
    enable_breakpoint: true,
    mobile_button: true,
    breakpoint: 1025
  });
};
//header top panel
if ($ttTopPanel.length) {
  ttTopPanel();
};
// add product item
if (blocks.ttBackToTop.length) {
  ttBackToTop();
};
// Slide Column *listing-left-column.html
if ($ttLeftColumnAside && blocks.ttBtnColumnClose && blocks.ttBtnToggle) {
  ttToggleCol();
};
if (blocks.ttCollapse.length) {
  ttCollapse();
};
//modal video on page product
if (blocks.modalVideoProduct.length) {
  ttVideoPopup();
};
//tt-collapse-block(pages product single)
if (blocks.ttCollapseBlock.length) {
  ttCollapseBlock();
};
//calendarDatepicker(blog)
if (blocks.ttCalendarDatepicker.length) {
  blocks.ttCalendarDatepicker.datepicker();
};
//video(blog listing)
if (blocks.ttVideoBlock.length) {
  ttVideoBlock();
};
// determination ie
if (getInternetExplorerVersion() !== -1) {
  $html.addClass("ie");
};
// inputCounter
if (blocks.ttInputCounter.length) {
  ttInputCounter();
};
// header
initStuck();
if ($ttDesctopParentSearch.length) {
  mobileParentSearch();
};
if ($ttcartObj.length) {
  mobileParentCart();
};
if ($ttDesctopParentAccount.length) {
  mobileParentAccount();
};
if ($ttDesctopParentMulti.length) {
  mobileParentMulti();
};
// product item Design01
if (blocks.ttProductDesign01.length) {
  ttProductHover();
};
if (blocks.ttfooterMobileCollapse.length) {
  ttFooterCollapse();
};
// lookbook.html
if (blocks.ttLookbook.length) {
  ttLookbook(ttwindowWidth);
};
// shopping_cart.html
if (blocks.ttShopCart.length) {
  ttShopCart(ttwindowWidth);
};
// carusel
if (blocks.ttCarouselProducts.length) {
  blocks.ttCarouselProducts.each( function() {
    var slick = $(this),
        item =  $(this).data('item');
    slick.slick({
      dots: false,
      arrows: true,
      infinite: true,
      speed: 300,
       slidesToShow: item || 4,
       slidesToScroll: item || 4,
      adaptiveHeight: true,
      responsive: [{
        breakpoint: 1025,
        settings: {
           slidesToShow: 3,
           slidesToScroll: 3
        }
      },
                   {
                     breakpoint: 791,
                     settings: {
                       slidesToShow: 2,
                  		slidesToScroll: 2
                     }
                   }]
    });
  });
};
// lookbook.html
// slider
if (blocks.ttSliderLookbook.length) {
  blocks.ttSliderLookbook.slick({
    dots: true,
    arrows: true,
    infinite: true,
    speed: 300,
    slidesToShow: 1,
    adaptiveHeight: true
  });
};

  

  //576
  //blog listing slider
$(document).ready(function(){
  if (blocks.ttMobileProductSlider.length) {
    if($(window).width() < 576){
      initttMobileProductSlider();
    }
    else{
      $(window).bind('resize.ttmobpr', initttMobileProductSlider);
    }
  };
  function initttMobileProductSlider(){
    $(window).unbind('resize.ttmobpr');
    blocks.ttMobileProductSlider.on('init', function(event, slick){
      var event = new CustomEvent('mobile-slider-initialized', { 'detail': $(this) });
      window.dispatchEvent(event);
    });
    var d = blocks.ttMobileProductSlider.attr('data-slickdots') == 'true' ? true : false;
    blocks.ttMobileProductSlider.slick({
      lazyLoad: 'progressive',
      dots: d,
      arrows: true,
      infinite: false,
      speed: 300,
      slidesToShow: 1,
      slidesToScroll: 1,
      adaptiveHeight: true
    });
  }
})

//slick main (* index-14.html)
if (blocks.ttSlickMain.length) {
  blocks.ttSlickMain.slick({
    dots: true,
    arrows: true,
    infinite: true,
    speed: 300,
    slidesToShow: 1,
    adaptiveHeight: true,
    responsive: [{
      breakpoint: 1025,
      settings: {
        dots: false,
      }
    }]
  });
};
//blog listing slider
if (blocks.ttSliderBlog.length) {
  blocks.ttSliderBlog.slick({
    dots: false,
    arrows: true,
    infinite: true,
    speed: 300,
    slidesToShow: 1,
    adaptiveHeight: true
  });
};
//blog single post slider
if (blocks.ttSliderBlogSingle.length) {
  blocks.ttSliderBlogSingle.slick({
    dots: false,
    arrows: false,
    infinite: true,
    speed: 300,
    slidesToShow: 1,
    adaptiveHeight: true
  });
  //total slides
  var ttSlickQuantity = $('.tt-slick-quantity');
  if (ttSlickQuantity.length) {
    ttSlickQuantity.find('.total').html(blocks.ttSliderBlogSingle.slick("getSlick").slideCount);
    blocks.ttSliderBlogSingle.on('afterChange', function(event, slick, currentSlide){
      var currentIndex = $('.slick-current').attr('data-slick-index');
      currentIndex++;
      ttSlickQuantity.find('.account-number').html(currentIndex);
    });
  };
  //button
  var ttSlickButton = $('.tt-slick-button');
  if (ttSlickButton.length) {
    ttSlickButton.find('.slick-next').click(function(){
      blocks.ttSliderBlogSingle.slick('slickNext');
    });
    ttSlickButton.find('.slick-prev').click(function(){
      blocks.ttSliderBlogSingle.slick('slickPrev');
    });
  };
};




// portfolio mobile click
if (blocks.ttPortfolioContent.length && is_touch_device()) {
  ttPortfolioContentMobile();
};
if (blocks.ttDotsAbsolute.length) {
  ttSlickDots();
};
//sticky(product-05.html)
if (blocks.ttAirSticky.length) {
  ttAirSticky(ttwindowWidth);
};
// header - tt-dropdown-obj
if (blocks.ttHeaderDropdown.length) {
  ttHeaderDropdown();
};

// product single tt-btn-zomm(*magnific popup)
if (blocks.ttProductSingleBtnZomm.length) {
  ttProductSingleBtnZomm();
};

$window.on('load', function () {
  var ttwindowWidth = window.innerWidth || $window.width();
  if ($body.length) {
    $body.addClass('loaded');
  };
  // filters options product(definition layout)
  if ($ttFilterOptions.length) {
    ttFilterLayout(ttwindowWidth);
  };
  if (blocks.ttProductItem.length) {
    ttProductSmall(ttwindowWidth);
  };
  if (blocks.ttProductDesign02.length) {
    ttOverflowProduct();
  };
  // centering arrow
  if (blocks.ttAlignmentImg.length) {
    alignmentArrowValue();
  };
  if (blocks.ttProductMasonry.length) {
    gridProductMasonr();
  };
  if (blocks.ttBlogMasonry.length) {
    gridGalleryMasonr();
  };
  if (blocks.ttPortfolioMasonry.length) {
    gridPortfolioMasonr();
    initPortfolioPopup();
  };  
});

var ttCachedWidth = $window.width();
$window.on('resize', function () {
  var newWidth = $window.width();
  if(newWidth !== ttCachedWidth){
    ttCachedWidth = newWidth;


    var ttwindowWidth = window.innerWidth || $window.width();

    // shopping_cart.html
    if (blocks.ttShopCart.length) {
      ttShopCart(ttwindowWidth);
    };
    // filters options product(definition layout)
    if ($ttFilterOptions.length) {
      ttFilterLayout(ttwindowWidth);
    };
    if (blocks.ttProductItem.length) {
      ttProductSmall();
    };
    if (blocks.ttProductDesign02.length) {
      ttOverflowProduct();
    };
    // portfolio mobile click
    if (blocks.ttPortfolioContent.length && is_touch_device()) {
      ttPortfolioContentMobile();
    };
    //sticky(product-05.html)
    if (blocks.ttAirSticky.length) {
      ttAirSticky(ttwindowWidth);
    };
    if ($ttLeftColumnAside.hasClass('column-open') && $ttLeftColumnAside.length) {
      $ttLeftColumnAside.find('.tt-btn-col-close a').trigger('click');
    };

    //header init stuck and detach
    if ($ttDesctopParentSearch.length) {
      mobileParentSearch();
    };
    if ($ttcartObj.length) {
      mobileParentCart();
    };
    if ($ttDesctopParentAccount.length) {
      mobileParentAccount();
    };
    if ($ttDesctopParentMulti.length) {
      mobileParentMulti();
    };
    if (blocks.ttDotsAbsolute.length) {
      ttSlickDots();
    };
    // centering arrow
    if (blocks.ttAlignmentImg.length) {
      alignmentArrowValue();
    };
  }
});
// Functions
var cssFix = function() {
  var u = navigator.userAgent.toLowerCase(),
      is = function(t) {
        return (u.indexOf(t) != -1)
      };
  $html.addClass([
    (!(/opera|webtv/i.test(u)) && /msie (\d)/.test(u)) ? ('ie ie' + RegExp.$1) :
    is('firefox/2') ? 'gecko ff2' :
    is('firefox/3') ? 'gecko ff3' :
    is('gecko/') ? 'gecko' :
    is('opera/9') ? 'opera opera9' : /opera (\d)/.test(u) ? 'opera opera' + RegExp.$1 :
    is('konqueror') ? 'konqueror' :
    is('applewebkit/') ? 'webkit safari' :
    is('mozilla/') ? 'gecko' : '',
    (is('x11') || is('linux')) ? ' linux' :
    is('mac') ? ' mac' :
    is('win') ? ' win' : ''
  ].join(''));
}();

function ttTopPanel(){
  $ttTopPanel.on('click', function(e) {
    e.preventDefault;
    var target = e.target;
    if ($('.tt-btn-close').is(target)){
      $(this).slideUp(200);
    };
  });
};

//tabs init carusel
$('a[data-toggle="tab"]').length && $('body').on('shown.bs.tab', 'a[data-toggle="tab"]', function (e) {
  $('.slick-slider').each(function() {
    $(this).slick("getSlick").refresh();
  });
  if (blocks.ttAlignmentImg.length) {
    alignmentArrowValue();
  };
});
$('.modal').on('shown.bs.modal', function (e) {
  var objSlickSlider = $(this).find('.slick-slider');
  if(objSlickSlider.length){
    objSlickSlider.each(function() {
      $(this).slick("getSlick").refresh();
    });
  };
});
function ttItemsCategories(){
  blocks.ttItemsCategories.hover(function() {
    $(this).toggleClass('active');
  });
};
function ttHeaderDropdown(){
  var dropdownPopup = $('.header-popup-bg');
  if(!dropdownPopup.length){
    $body.append('<div class="header-popup-bg"></div>');
  };
  $('header').on('click', '.tt-dropdown-obj', function(e) {
    var ttwindowWidth = window.innerWidth || $window.width(),
        $this = $(this),
        target = e.target,
        objSearch = $('.tt-search'),
        objSearchInput = objSearch.find('.tt-search-input');

    // search
    if ($this.hasClass('tt-search') && $('.tt-dropdown-toggle').is(target)){
      searchPopup();
    };
    function searchPopup(){
      $('body').addClass('tt-open-search');
      $this.addClass('active');
      setTimeout(function(){objSearchInput.focus();}, 150)
      return false;
    };
    if (objSearch.find('.tt-btn-close').is(target)){
      objSearchClose();
      return false;
    };
    function objSearchClose(){
      $('body').removeClass('tt-open-search');
      $this.removeClass('active');
      objSearchInput.blur();
      return false;
    };

    // cart, account, multi-ob
    if (!$(this).hasClass('tt-search') && $('.tt-dropdown-toggle').is(target)){
      ttwindowWidth <= 1024 ?  popupObjMobile($this) : popupObjDesctop($this);
    };
    function popupObjMobile(obj){
      $('header').find('.tt-dropdown-obj.active').removeClass('active');
      obj.toggleClass('activetoview');
      setTimeout(function(){
      obj.toggleClass('active').find('.tt-dropdown-menu').removeAttr("style");
      $body.toggleClass('tt-popup-dropdown');
      $('header .tt-cart .tt-dropdown-menu').perfectScrollbar().addClass('perfectScrollbar');/* cart * / */
      }, 50)
    };
    function popupObjDesctop(obj){
      var $this = obj,
          target = e.target;

      if ($this.hasClass('active')){
        $this.toggleClass('active').find('.tt-dropdown-menu').slideToggle(200);
        $this.find('.ps-container').removeAttr("style");/* cart * / */
        return;
      };
      $('.tt-desktop-header .tt-dropdown-obj').each( function () {
        var $this = $(this);
        if($this.hasClass('active')){
          $this.removeClass('active').find('.tt-dropdown-menu').css("display", "none");
        }
      });
      if ($('.tt-dropdown-toggle').is(target)){
        toggleDropdown($this);
      };
      if($this.hasClass('tt-cart')){/* cart * / */
        $.fn.getRealDimensions = function (outer){
          var $this = $(this);
          if ($this.length == 0) {
            return false;
          }
          var $clone = $this.clone()
          .show()
          .css('visibility','hidden')
          .insertAfter($this);
          var result = {
            width:      (outer) ? $clone.outerWidth() : $clone.innerWidth(),
            height:     (outer) ? $clone.outerHeight() : $clone.innerHeight(),
            offsetTop:  $clone.offset().top,
            offsetLeft: $clone.offset().left
          };
          $clone.remove();
          return result;
        };

        var dimensions = $('.tt-cart-content').getRealDimensions().height,
            viewportHeight = window.innerHeight,
            cartPopup = dimensions + $('.tt-desktop-header').height(),
            stuckNav = $('.tt-stuck-nav');

        if(stuckNav.hasClass('stuck')){
          var insertValue = viewportHeight - stuckNav.height();
        } else{
          var insertValue = viewportHeight - $('.tt-desktop-header').height();
        };

        if(viewportHeight <= cartPopup){
          $('header .tt-dropdown-menu .tt-cart-layout').css({
            'height' : insertValue  + 'px'
          }).perfectScrollbar().addClass('perfectScrollbar');
        };
        $(window).resize(debouncer(function(e){
          var ttCart = $('.tt-cart');
          if(ttCart.hasClass('active')){
            $('.tt-cart .tt-dropdown-toggle').trigger('click');
          };
        }));
      }
    };
    function toggleDropdown(obj){
      obj.toggleClass('active').find('.tt-dropdown-menu').slideToggle(200);
    };

    $(document).mouseup(function(e){
      var ttwindowWidth = window.innerWidth || $window.width();

      if (!$this.is(e.target) && $this.has(e.target).length === 0){
        $this.each(function(){
          if($this.hasClass('active') && $this.hasClass('tt-search')){
            objSearch.find('.tt-btn-close').trigger('click');
          };
          if($this.hasClass('active') && !$this.hasClass('tt-search')){
            if(ttwindowWidth <= 1024){
              closeObjPopupMobile();
            } else {
              $('.tt-dropdown-obj').each( function () {
                if($(this).hasClass('active')){
                  $(this).removeClass('active').find('.tt-dropdown-menu').css("display", "none");
                }
              });
            };
          };
        });
      };
      if ($this.find('.tt-mobile-add .tt-close').is(e.target)){
        closeObjPopupMobile();
      };
    });
    function closeObjPopupMobile(){
      $('.tt-dropdown-obj.active').removeClass('active')
      $('.tt-dropdown-obj.activetoview').length && setTimeout(function(){$('.tt-dropdown-obj.activetoview').removeClass('activetoview');}, 200)
      $body.removeClass('tt-popup-dropdown');
      return false;
    };
  });
};

// button back to top
function ttBackToTop() {
  blocks.ttBackToTop.on('click',  function(e) {
    $('html, body').animate({
      scrollTop: 0
    }, 500);
    return false;
  });
  $window.scroll(function() {
    $window.scrollTop() > 500 ? blocks.ttBackToTop.stop(true.false).addClass('tt-show') : blocks.ttBackToTop.stop(true.false).removeClass('tt-show');
  });
};

// modal Add ToCart(*close)
function modalAddToCart() {
  blocks.modalAddToCart.on('click', '.btn-close-popup',  function(e) {
    $(this).closest('.modal-content').find('.modal-header .close').trigger('click');
    return false;
  });
};

// Mobile footer collapse
function ttFooterCollapse() {
  blocks.ttfooterMobileCollapse.on('click',  function(e) {
    e.preventDefault;
    $(this).toggleClass('tt-open');
  });
};

//slick slider functional for dots
function ttSlickDots() {
  blocks.ttDotsAbsolute.each(function(){
    var $this = $(this).find('.slick-dots');
    if($this.is(':visible')){
      var upperParent = $this.closest('[class ^= container]');
      if (upperParent.length){
        upperParent.css({'paddingBottom' : parseInt($this.height(), 10) + parseInt($this.css('marginTop'), 10)});
      }
    }
  });
};
// product item Design01 hover (*desctope)
function ttProductHover() {
  $document.on('mouseenter mouseleave', '#tt-pageContent .tt-product', function(e) {
    if($('.tt-product-listing').length && $('.tt-product-listing').hasClass("tt-col-one")) return false;

    var $this = $(this),
        windW = window.innerWidth,
        objLiftUp01 = $this.find('.tt-description'),
        objLiftUp02 = $this.find('.tt-product-inside-hover'),
        objHeight02 = parseInt(objLiftUp02.height())+3,
        objCountdown = $this.find('.tt-countdown_box'),
        target = e.target;

    if (e.type === 'mouseenter' && windW > 1024) {
      ttOnHover();
    } else if (e.type === 'mouseleave' && e.relatedTarget && windW > 1024) {
      ttOffHover();
    };

    function ttOnHover(e){
      $this.stop().css({
        height: $this.innerHeight()
      }).addClass('hovered');
      objLiftUp01.stop().animate({'top': '-' + objHeight02}, 200);
      objLiftUp02.stop().animate({ 'opacity': 1 }, 400);
      objCountdown.stop().animate({'bottom': objHeight02}, 200);
      return false;
    };
    function ttOffHover(e){
      $this.stop().removeClass('hovered').removeAttr('style');
      objLiftUp01.stop().animate({'top': '0'}, 200, function(){$(this).removeAttr('style')});
      objLiftUp02.stop().animate({ 'opacity': 0 }, 100, function(){$(this).removeAttr('style')});
      objCountdown.stop().animate({'bottom': 0}, 200, function(){$(this).removeAttr('style')});
      return false
    };
  });
};

// shopping_cart.html
function ttShopCart(ttwindowWidth) {
  var desctopQuantity = blocks.ttShopCart.find(".detach-quantity-desctope"),
      mobileQuantity = blocks.ttShopCart.find(".detach-quantity-mobile");

  ttwindowWidth <= 789 ?  insertDesctopeObj() : insertMobileObj();

  function insertDesctopeObj(){
    desctopQuantity.each(function(){
      var objDesctope = $(this).find('.tt-input-counter').detach().get(0);
      $(this).closest('tr').find('.detach-quantity-mobile').append(objDesctope);
    })
  };
  function insertMobileObj(){
    mobileQuantity.each(function(){
      var objMobile = $(this).find('.tt-input-counter').detach().get(0);
      $(this).closest('tr').find('.detach-quantity-desctope').append(objMobile);
    })
  };
};

// product Small
function ttProductSmall(){
  var currentW = parseInt(blocks.ttProductItem.width(), 10),
      objProduct = $(".tt-product, .tt-product-design02");
  currentW <= 210 ? objProduct.addClass("tt-small") : objProduct.removeClass("tt-small");
};

function debouncer(func, timeout) {
  var timeoutID, timeout = timeout || 500;
  return function() {
    var scope = this,
        args = arguments;
    clearTimeout(timeoutID);
    timeoutID = setTimeout(function() {
      func.apply(scope, Array.prototype.slice.call(args));
    }, timeout);
  }
};

// centering arrow
function alignmentArrowValue(){
  if(!$ttPageContent.find('.tt-alignment-img').length) return false;
    
  var ttwindowWidth = window.innerWidth || $window.width();

  if(ttwindowWidth > 1024){
    setTimeout(function() {
      $ttPageContent.find('.tt-alignment-img').each(function() {
        $(this).find('.slick-arrow').removeAttr("style");
      });
    }, 225);
  } else {
    setTimeout(function() {
      $ttPageContent.find('.tt-alignment-img').each(function() {
        var ttObj = $(this),
            $objParentArrow = ttObj.find('.slick-arrow');
        if(ttObj.find('.tt-image-box').length == 0 || $objParentArrow.length == 0) return;
        var $obj = ttObj.find('.tt-image-box').first();
        $objParentArrow.css({
          'top' : $obj.findHeight() - $objParentArrow.findHeight() - parseInt(ttObj.css('marginTop'), 10) + 'px'
        });

        ttObj.find('.tt-product').length && ttProductSmall();
      });
    }, 225);
  };

};
$.fn.findHeight = function (){
  var $blocks = $(this),
      maxH    = $blocks.eq(0).innerHeight();

  $blocks.each(function(){
    maxH = ( $(this).innerHeight() > maxH ) ? $(this).innerHeight() : maxH;
  });

  return maxH/2;
};
// tt-hotspot
function ttLookbook(ttwindowWidth){
  //add lookbook popup
  var objPopup = $('.tt-lookbook-popup');
  if(!objPopup.length){
    $body.append('<div class="tt-lookbook-popup"><div class="tt-lookbook-container"></div></div>');
  };

  var events = 'ontouchstart' in window ? "click" : "click mouseenter";
  blocks.ttLookbook.on(events, '.tt-hotspot' , function(e) {
    var $this = $(this),
        target = e.target,
        ttHotspot = $('.tt-hotspot'),
        ttwindowWidth = window.innerWidth || $window.width(),
        ttCenterBtn = $('.tt-btn').innerHeight() / 2,
        ttWidthPopup = $('.tt-hotspot-content').innerWidth();


    ttwindowWidth <= 789 ?  ttLookbookMobile($this) : ttLookbookDesktop($this);

    //ttLookbookDesktop
    function ttLookbookDesktop($this){

      if ($this.hasClass('active')) return;

      var objTop = $this.offset().top + ttCenterBtn,
          objLeft = $this.offset().left,
          objContent = $this.find('.tt-hotspot-content').detach();

      //check if an open popup
      var checkChildren = $('.tt-lookbook-container').children().size();
      if(checkChildren > 0){
        if(ttwindowWidth <= 789){
          closePopupMobile();
        } else {
          closePopupDesctop();
        };
      }

      //open popup
      popupOpenDesktop(objContent, objTop, objLeft);

    };
    function popupOpenDesktop(objContent, objTop, objLeft){
      //check out viewport(left or right)
      var halfWidth =  ttwindowWidth / 2,
          objLeftFinal = 0;

      if(halfWidth < objLeft){
        objLeftFinal = objLeft - ttWidthPopup - 7;
        popupShowLeft(objLeftFinal);
      } else{
        objLeftFinal = objLeft + 45;
        popupShowRight(objLeftFinal);
      };

      $('.tt-lookbook-popup').find('.tt-lookbook-container').append(objContent);
      $this.addClass('active').siblings().removeClass('active');

      function popupShowLeft(objLeftFinal){
        $('.tt-lookbook-popup').css({
          'top' : objTop,
          'left' : objLeftFinal,
          'display' : 'block'
        }, 300).animate({
          marginLeft: 26 + 'px',
          opacity: 1
        }, 300);
      };
      function popupShowRight(objLeftFinal){
        $('.tt-lookbook-popup').css({
          'top' : objTop,
          'left' : objLeftFinal,
          'display' : 'block'
        }).animate({
          marginLeft: -26 + 'px',
          opacity: 1
        });
      };
    };
    //ttLookbookMobile
    function ttLookbookMobile($this){
      var valueTop = $this.attr('data-top') + '%',
          valueLeft = $this.attr('data-left') + '%';

      $this.find('.tt-btn').css({
        'top' : valueTop,
        'left' : valueLeft
      });
      $this.css({
        'top' : '0px',
        'left' : '0px',
        'width' : '100%',
        'height' : '100%'
      });
      $this.addClass('active').siblings().removeClass('active');
      $this.find('.tt-content-parent').fadeIn(200);
    };
    //Close mobile
    if(ttwindowWidth <= 789){
      if ($('.tt-btn-close').is(e.target)){
        closePopupMobile();
        return false;
      };
      if ($('.tt-hotspot').is(e.target)){
        closePopupMobile();
      };
      $(document).mouseup(function(e){
        if (!$('.tt-lookbook-popup').is(e.target) && $('.tt-lookbook-popup').has(e.target).length === 0 && !$('.tt-hotspot').is(e.target) && $('.tt-hotspot').has(e.target).length === 0){
          closePopupDesctop();
        };
      });
    };
    //Close desctope
    if(ttwindowWidth > 789){
      //ttLookbookClose
      $(document).mouseup(function(e){
        var ttwindowWidth = window.innerWidth || $window.width();
        if ($('.tt-btn-close').is(e.target)){
          closePopupDesctop();
          return false;
        };
        if (!$('.tt-lookbook-popup').is(e.target) && $('.tt-lookbook-popup').has(e.target).length === 0 && !$('.tt-hotspot').is(e.target) && $('.tt-hotspot').has(e.target).length === 0){
          closePopupDesctop();
        };
      });
    };

    function closePopupDesctop(){
      //detach content popup
      var detachContentPopup = $('.tt-lookbook-popup').removeAttr("style").find('.tt-hotspot-content').detach();
      $('.tt-hotspot.active').removeClass('active').find('.tt-content-parent').append(detachContentPopup);
    };
    function closePopupMobile(){
      if($('.tt-lookbook-container').is(':has(div)')){
        var checkPopupContent = $('.tt-lookbook-container').find('.tt-hotspot-content').detach();
        $('.tt-hotspot.active').find('.tt-content-parent').append(checkPopupContent);
      };
      $('.tt-lookbook').find('.tt-hotspot.active').each(function(index) {
        var $this = $(this),
            valueTop = $this.attr('data-top') + '%',
            valueLeft = $this.attr('data-left') + '%';

        $this.removeClass('active').removeAttr("style").css({
          'top' : valueTop,
          'left' : valueLeft,
        }).find('.tt-btn').removeAttr("style").next().removeAttr("style");
      });
    };
    function checkclosePopupMobile(){
      $('.tt-hotspot').find('.tt-content-parent').each(function() {
        var $this = $(this);
        if($this.css('display') == 'block'){
          var $thisParent = $this.closest('.tt-hotspot'),
              valueTop = $thisParent.attr('data-top') + '%',
              valueLeft = $thisParent.attr('data-left') + '%';

          $this.removeAttr("style").prev().removeAttr("style");
          $thisParent.removeAttr("style").css({
            'top' : valueTop,
            'left' : valueLeft,
          });
        };
      });
    };
    $(window).resize(debouncer(function(e) {
      var ttwindowWidth = window.innerWidth || $window.width();
      if(ttwindowWidth <= 789){
        closePopupMobile();
      } else {
        closePopupDesctop();
        checkclosePopupMobile();
      };
    }));
    // return false;
  });
};
// Overflow Product
function ttOverflowProduct(){
  blocks.ttProductDesign02.hover(function() {
    if($('.tt-product-listing').length && $('.tt-product-listing').hasClass("tt-col-one")) return false;

    if (window.innerWidth < 1024) return;
    var objImgHeight = $(this).find('.tt-image-box').height(),
        objScroll = $(this).find('.tt-description'),
        objScrollHeight = objScroll.height() + 25;

    if (objImgHeight > objScrollHeight) return;
    $(this).addClass('tt-small');
    objScroll.height(objImgHeight).perfectScrollbar();

  }, function() {
    if (window.innerWidth < 1024) return;
    $(this).removeClass('tt-small').find('.tt-description').removeAttr('style').perfectScrollbar('destroy');
  });
};
function ttReinitflowProduct(){
  if (window.innerWidth < 1024 || $ttPageContent.find('.tt-product-design02').length == 0) return;
  $ttPageContent.find('.tt-product-design02').each(function() {
    $(this).perfectScrollbar('destroy');
    var objImgHeight = $(this).find('.tt-image-box').height(),
        objScroll = $(this).find('.tt-description'),
        objScrollHeight = objScroll.height() + 25;

    if (objImgHeight > objScrollHeight) return;
    $(this).addClass('tt-small');
    objScroll.height(objImgHeight).perfectScrollbar();
  });
}

// portfolio mobile click
function ttPortfolioContentMobile(){
  blocks.ttPortfolioContent.on('click', 'figure img', function() {
    $(this).closest(".tt-portfolio-content").find('figure').removeClass('gallery-click');
    $(this).closest("figure").addClass('gallery-click');
  });
};

//toggle col (listing-left-column.html)
function ttToggleCol() {
  var $btnClose = $ttLeftColumnAside.find('.tt-btn-col-close a');

  $('.tt-btn-toggle').on('click', function (e) {
    e.preventDefault();
    var ttScrollValue = $body.scrollTop() || $html.scrollTop();
    $ttLeftColumnAside.toggleClass('column-open').perfectScrollbar();
    $body.css("top", - ttScrollValue).addClass("no-scroll").append('<div class="modal-filter"></div>');
    var modalFilter = $('.modal-filter').fadeTo('fast',1);
    if (modalFilter.length) {
      modalFilter.click(function() {
        $btnClose.trigger('click');
      })
    }
    return false;
  });
  blocks.ttBtnColumnClose.on('click', function(e) {
    e.preventDefault();
    $ttLeftColumnAside.removeClass('column-open').perfectScrollbar('destroy');
    var top = parseInt($body.css("top").replace("px", ""), 10) * -1;
    $body.removeAttr("style").removeClass("no-scroll").scrollTop(top);
    $html.removeAttr("style").scrollTop(top);
    $(".modal-filter").unbind().remove();
  });
};

function ttCollapseBlock() {
  blocks.ttCollapseBlock.each( function () {
    var obj = $(this),
        objOpen = obj.find('.tt-item.active'),
        objItemTitle = obj.find('.tt-item .tt-collapse-title');

    objOpen.find('.tt-collapse-content').slideToggle(200);

    objItemTitle.on('click', function () {
      $(this).next().slideToggle(200).parent().toggleClass('active');
    });
  });
};
function getInternetExplorerVersion() {
  var rv = -1;
  if (navigator.appName === 'Microsoft Internet Explorer') {
    var ua = navigator.userAgent;
    var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
    if (re.exec(ua) != null)
      rv = parseFloat(RegExp.$1);
  } else if (navigator.appName === 'Netscape') {
    var ua = navigator.userAgent;
    var re = new RegExp("Trident/.*rv:([0-9]{1,}[\.0-9]{0,})");
    if (re.exec(ua) != null)
      rv = parseFloat(RegExp.$1);
  }
  return rv;
};
// identify touch device
function is_touch_device() {
  return !!('ontouchstart' in window) || !!('onmsgesturechange' in window);
};
if (is_touch_device()) {
  $body.addClass('touch-device');
  $html.addClass('touch-device');
};
if (/Edge/.test(navigator.userAgent)) {
  $html.addClass('edge');
};
//video
function ttVideoBlock() {
  $('.tt-video-block').on('click', function (e) {
    e.preventDefault();
    var myVideo = $(this).find('.movie')[0];
    if (myVideo.paused) {
      myVideo.play();
      $(this).addClass('play');
    } else {
      myVideo.pause();
      $(this).removeClass('play');
    }
  });
};
// Blog Masonr
function gridGalleryMasonr() {
  // init Isotope
  var $grid = blocks.ttBlogMasonry.find('.tt-blog-init').isotope({
    itemSelector: '.element-item',
    layoutMode: 'masonry',
  });
  // layout Isotope after each image loads
  $grid.imagesLoaded().progress( function() {
    $grid.isotope('layout').addClass('tt-show');
  });
  // filter functions
  var ttFilterNav =  blocks.ttBlogMasonry.find('.tt-filter-nav');
  if (ttFilterNav.length) {
    var filterFns = {
      ium: function() {
        var name = $(this).find('.name').text();
        return name.match(/ium$/);
      }
    };
    // bind filter button click
    ttFilterNav.on('click', '.button', function() {
      var filterValue = $(this).attr('data-filter');
      filterValue = filterFns[filterValue] || filterValue;
      $grid.isotope({
        filter: filterValue
      });
      $(this).addClass('active').siblings().removeClass('active');
    });
  };
};
// Product Masonr (listing-metro.html)
function gridProductMasonr() {
  // init Isotope
  var $grid = blocks.ttProductMasonry.find('.tt-product-init').isotope({
    itemSelector: '.element-item',
    layoutMode: 'masonry',
  });
  // layout Isotope after each image loads
  $grid.imagesLoaded().progress( function() {
    $grid.isotope('layout');
  });
  // filter functions
  var ttFilterNav =  blocks.ttProductMasonry.find('.tt-filter-nav');
  if (ttFilterNav.length) {
    var filterFns = {
      ium: function() {
        var name = $(this).find('.name').text();
        return name.match(/ium$/);
      }
    };
    // bind filter button click
    ttFilterNav.on('click', '.button', function() {
      var filterValue = $(this).attr('data-filter');
      filterValue = filterFns[filterValue] || filterValue;
      $grid.isotope({
        filter: filterValue
      });
      $(this).addClass('active').siblings().removeClass('active');
    });
  };
};
// collapseBlock(pages listing) *listing-left-column.html
function ttCollapse() {
  var item = blocks.ttCollapse,
      itemTitle = item.find('.tt-collapse-title'),
      itemContent = item.find('.tt-collapse-content');

  item.each(function() {
    if ($(this).hasClass('open')) {
      $(this).find(itemContent).slideDown();
    } else {
      $(this).find(itemContent).slideUp();
    }
  });
  itemTitle.on('click', function(e) {
    e.preventDefault();
    var speed = 300;
    var thisParent = $(this).parent(),
        nextLevel = $(this).next('.tt-collapse-content');
    if (thisParent.hasClass('open')) {
      thisParent.removeClass('open');
      nextLevel.slideUp(speed);
    } else {
      thisParent.addClass('open');
      nextLevel.slideDown(speed);
    }
  })
};
// ttFiltersOptions
(function($) {
  $.fn.removeClassFirstPart = function(mask) {
    return this.removeClass(function(index, cls) {
      var re = mask.replace(/\*/g, '\\S+');
      return (cls.match(new RegExp('\\b' + re + '', 'g')) || []).join(' ');
    });
  };
})(jQuery);

function ttFilterLayout(ttwindowWidth){
  if($('.tt-product-listing').hasClass("only-row")) return false;
  // detach filter aside left
  if($ttFilterOptions.hasClass('desctop-no-sidebar') && !$ttFilterOptions.hasClass('filters-detach-mobile')){
     ttwindowWidth <= 1024 ?  insertMobileCol() : insertFilter();
  };
  if($ttFilterOptions.hasClass('filters-detach-mobile')){
    ttwindowWidth <= 1024 ?  insertMobileCol() : insertFilter();
  };
  if(!$ttFilterOptions.hasClass('desctop-no-sidebar')){
    ttwindowWidth <= 1024 ?  insertMobileCol() : insertFilter();
  };

  function insertMobileCol(){
    var objFilterOptions = blocks.ttFilterSort.find('select').detach();
    blocks.ttFilterDetachOption.find('.filters-row-select').append(objFilterOptions);
  };
  function insertFilter(){
    var objColFilterOptions = blocks.ttFilterDetachOption.find('.filters-row-select select').detach();
    blocks.ttFilterSort.append(objColFilterOptions);
  };

  //active filter detection
  blocks.ttProductListing.removeClassFirstPart("tt-col-*");

  var ttQuantity = $ttFilterOptions.find('.tt-quantity'),
      ttProductItem = blocks.ttProductListing.find('.tt-col-item:first'),
      ttProductItemValue =  (function(){
        if(ttQuantity.length && ttProductItem.length){
          var ttValue = parseInt(ttProductItem.css("flex").replace("0 0", "").replace("%", ""), 10) || parseInt(ttProductItem.css("max-width"), 10);
          return ttValue;
        };
      }());

  if(ttProductItemValue == 16){
    ttСhangeclass(ttQuantity, '.tt-col-six');
  } else if(ttProductItemValue == 25){
    ttСhangeclass(ttQuantity, '.tt-col-four');
  } else if(ttProductItemValue == 33){
    ttСhangeclass(ttQuantity, '.tt-col-three');
  } else if(ttProductItemValue == 50){
    ttСhangeclass(ttQuantity, '.tt-col-two');
  } else if(ttProductItemValue == 100){
    ttСhangeclass(ttQuantity, '.tt-col-one');
  };

  function ttСhangeclass(ttObj, ttObjvalue){
    ttwindowWidth <= 1024 ?  ttShowIconMobile(ttObj, ttObjvalue) : ttShowIconDesctop(ttObj, ttObjvalue);
    if(ttObj.find(".active").length == 0 || !ttObj.find(".active").hasClass('tt-show-siblings')) ttObj.find(ttObjvalue).addClass('active').siblings().removeClass('active');
  };

  function ttShowIconDesctop(ttObj, ttObjvalue){

    ttObj.find('.tt-show').removeClass('tt-show');
    ttObj.find('.tt-show-siblings').removeClass('tt-show-siblings');

    var $this = ttObj.find(ttObjvalue);
    $this.addClass('tt-show');

    $this.next().addClass('tt-show-siblings');
    $this.prev().addClass('tt-show-siblings');
    var quantitySiblings = $('.tt-quantity .tt-show-siblings').length;
    if(quantitySiblings === 1){
      ttObj.find('.tt-show-siblings').prev().addClass('tt-show-siblings');
    };

    if(!Boolean($('.tt-product-listing').data("onerow"))) return false;
    $(".tt-col-one").addClass('tt-show-siblings');
    var _ca = ttObj.find(".active").data("value");
    $('.tt-product-listing').addClass(_ca);
  };
  function ttShowIconMobile(ttObj, ttObjvalue){
    ttObj.find('.tt-show').removeClass('tt-show');
    ttObj.find('.tt-show-siblings').removeClass('tt-show-siblings');

    var $this = ttObj.find(ttObjvalue);
    $this.addClass('tt-show');
    $this.prev().addClass('tt-show-siblings');
    
    if($('.tt-product-listing').data("onerow") == "false") return false;
    $(".tt-col-one").addClass('tt-show-siblings');
    var _ca = ttObj.find(".active").data("value");
    $('.tt-product-listing').addClass(_ca);
  };

  //click buttons filter
  $('body').on('click', '.tt-filters-options a', function(e) {
    e.preventDefault();
    ttQuantity.find('a').removeClass('active');
    var ttActiveValue = $(this).addClass('active').attr('data-value');
    $ttPageContent.find('.tt-product-listing').removeClassFirstPart("tt-col-*").addClass(ttActiveValue);
    ttProductSmall();
    initImagesSize();
  });
};


// Portfolio
function gridPortfolioMasonr() {
  // init Isotope
  var $grid = blocks.ttPortfolioMasonry.find('.tt-portfolio-content').isotope({
    itemSelector: '.element-item',
    layoutMode: 'masonry',
  });
  // layout Isotope after each image loads
  $grid.imagesLoaded().progress( function() {
    $grid.isotope('layout').addClass('tt-show');
  });
  // filter functions
  var ttFilterNav =  blocks.ttPortfolioMasonry.find('.tt-filter-nav');
  if (ttFilterNav.length) {
    var filterFns = {
      ium: function() {
        var name = $(this).find('.name').text();
        return name.match(/ium$/);
      }
    };
    // bind filter button click
    ttFilterNav.on('click', '.button', function() {
      var filterValue = $(this).attr('data-filter');
      filterValue = filterFns[filterValue] || filterValue;
      $grid.isotope({
        filter: filterValue
      });
      $(this).addClass('active').siblings().removeClass('active');
    });
  };
};
function initPortfolioPopup() {
  var objZoom = $ttPageContent.find('.tt-portfolio-masonry .tt-btn-zomm');
  objZoom.magnificPopup({
    type: 'image',
    gallery: {
      enabled: true
    }
  });
};
//input-counter
function ttInputCounter() {
  blocks.ttInputCounter.find('.minus-btn, .plus-btn').click(function( e ) {
    var $input = $(this).parent().find('input');
    var count = parseInt($input.val(), 10) + parseInt(e.currentTarget.className === 'plus-btn' ? 1 : -1, 10);
    $input.val(count).change();
  });
  blocks.ttInputCounter.find("input").change(function() {
    var _ = $(this);
    var min = 1;
    var val = parseInt(_.val(), 10);
    var max = parseInt(_.attr('size'), 10);
    val = Math.min(val, max);
    val = Math.max(val, min);
    _.val(val);
  })
  .on("keypress", function( e ) {
    if (e.keyCode === 13) {
      e.preventDefault();
    }
  });
};
//popup on pages product single
function ttVideoPopup() {
  blocks.modalVideoProduct.on('show.bs.modal', function(e) {
    var relatedTarget = $(e.relatedTarget),
        attr = relatedTarget.attr('data-value'),
        attrPoster = relatedTarget.attr('data-poster'),
        attrType = relatedTarget.attr('data-type');

    if(attrType === "youtube" || attrType === "vimeo" || attrType === undefined){
      $('<iframe src="'+attr+'" allowfullscreen></iframe>').appendTo($(this).find('.modal-video-content'));
    };

    if(attrType === "video"){
      $('<div class="tt-video-block"><a href="#" class="link-video"></a><video class="movie" src="'+attr+'" poster="'+attrPoster+'" allowfullscreen></video></div>').appendTo($(this).find('.modal-video-content'));

    };
    ttVideoBlock();
  }).on('hidden.bs.modal', function () {
    $(this).find('.modal-video-content').empty();
  });
};
//product pages
var elevateZoomWidget = {
  scroll_zoom: true,
  class_name: '.zoom-product',
  thumb_parent: $('#smallGallery'),
  scrollslider_parent: $('.slider-scroll-product'),
  checkNoZoom: function(){
    return $(this.class_name).parent().parent().hasClass('no-zoom');
  },
  init: function(type){
    var _ = this;
    var currentW = window.innerWidth || $(window).width();
    var zoom_image = $(_.class_name);
    var _thumbs = _.thumb_parent;
    _.initBigGalleryButtons();
    _.scrollSlider();

    if(zoom_image.length == 0) return false;
    if(!_.checkNoZoom()){
      var attr_scroll = zoom_image.parent().parent().attr('data-scrollzoom');
      attr_scroll = attr_scroll ? attr_scroll : _.scroll_zoom;
      _.scroll_zoom = attr_scroll == 'false' ? false : true;
      currentW > 575 && _.configureZoomImage();
      _.resize();
    }

    if(_thumbs.length == 0) return false;
    var thumb_type = _thumbs.parent().attr('class').indexOf('-vertical') > -1 ? 'vertical' : 'horizontal';
    _[thumb_type](_thumbs);
    _.setBigImage(_thumbs);
  },
  configureZoomImage: function(){
    var _ = this;
    $('.zoomContainer').remove();
    var zoom_image = $(this.class_name);
    zoom_image.each(function(){
      var _this = $(this);
      var clone = _this.removeData('elevateZoom').clone();
      _this.after(clone).remove();
    });
    setTimeout(function(){
      $(_.class_name).elevateZoom({
        gallery: _.thumb_parent.attr('id'),
        zoomType: "inner",
        scrollZoom: Boolean(_.scroll_zoom),
        cursor: "crosshair",
        zoomWindowFadeIn: 300,
        zoomWindowFadeOut: 300
      });
    }, 100);
  },
  resize: function(){
    var _ = this;
    $(window).resize(function(){
      var currentW = window.innerWidth || $(window).width();
      if(currentW <= 575) return false;
      _.configureZoomImage();
    });
  },
  horizontal: function(_parent){
    _parent.slick({
      lazyLoad: 'progressive',
      infinite: false,
      dots: false,
      arrows: true,
      slidesToShow: 6,
      slidesToScroll: 1,
      responsive: [{
        breakpoint: 1200,
        settings: {
          slidesToShow: 4,
          slidesToScroll: 1
        }
      },
                   {
                     breakpoint: 992,
                     settings: {
                       slidesToShow: 4,
                       slidesToScroll: 1
                     }
                   }]
    });
  },
  vertical: function(_parent){
    _parent.on('init', function(event, slick){
      var event = new CustomEvent('desktop-slider-initialized', { 'detail': $(this) });
      window.dispatchEvent(event);
    });
    _parent.slick({
      lazyLoad: 'progressive',
      vertical: true,
      infinite: false,
      slidesToShow: 5,
      slidesToScroll: 1,
      verticalSwiping: true,
      arrows: true,
      dots: false,
      centerPadding: "0px",
      customPaging: "0px",
      responsive: [{
        breakpoint: 1200,
        settings: {
          slidesToShow: 5,
          slidesToScroll: 1
        }
      },
                   {
                     breakpoint: 992,
                     settings: {
                       slidesToShow: 5,
                       slidesToScroll: 1
                     }
                   },
                   {
                     breakpoint: 768,
                     settings: {
                       slidesToShow: 5,
                       slidesToScroll: 1
                     }
                   }]
    });
  },
  initBigGalleryButtons: function(){
    var bigGallery = $('.bigGallery');
    if(bigGallery.length == 0) return false;
    $( 'body' ).on( 'mouseenter', '.zoomContainer',
                   function(){        bigGallery.find('button').addClass('show');        }
                  ).on( 'mouseleave', '.zoomContainer',
                       function(){ bigGallery.find('button').removeClass('show'); }
                      );
  },
  scrollSlider: function(){
    var _scrollslider_parent = this.scrollslider_parent;
    if(_scrollslider_parent.length == 0) return false;
    _scrollslider_parent.on('init', function(event, slick) {
      _scrollslider_parent.css({ 'opacity': 1 });
    });
    _scrollslider_parent.css({ 'opacity': 0 }).slick({
      infinite: false,
      vertical: true,
      verticalScrolling: true,
      dots: true,
      arrows: false,
      slidesToShow: 1,
      slidesToScroll: 1,
      responsive: [{
        breakpoint: 1200,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1
        }
      },
                   {
                     breakpoint: 992,
                     settings: {
                       slidesToShow: 1,
                       slidesToScroll: 1
                     }
                   },
                   {
                     breakpoint: 768,
                     settings: {
                       slidesToShow: 1,
                       slidesToScroll: 1
                     }
                   }]
    }).mousewheel(function(e) {
      e.preventDefault();
      e.deltaY < 0 ? $(this).slick('slickNext') : $(this).slick('slickPrev');
    });
  },
  setBigImage: function(_parent){
    var _ = this;
    _parent.find('a').click(function(e){
      _.checkNoZoom() && e.preventDefault();
      var zoom_image = $(_.class_name);
      var getParam = _.checkNoZoom() ? 'data-image' : 'data-zoom-image';
      var setParam = _.checkNoZoom() ? 'src' : 'data-zoom-image';
      var big_image = $(this).attr(getParam);
      zoom_image.attr(setParam, big_image);

      if(!_.checkNoZoom()) return false;
      _parent.find('.zoomGalleryActive').removeClass('zoomGalleryActive');
      $(this).addClass('zoomGalleryActive');
    });
  }
};
elevateZoomWidget.init();

// product single tt-btn-zomm(*magnific popup)
function ttProductSingleBtnZomm() {
  $body.on('click', '.tt-product-single-img .tt-btn-zomm', function (e) {
    var objSmallGallery = $('#smallGallery');
    objSmallGallery.find('[data-zoom-image]').each(function(){
      var dataZoomImg = $(this).attr('data-zoom-image');
      if(dataZoomImg.length){
        $(this).closest('li').append("<a class='link-magnific-popup' href='#'></a>").find('.link-magnific-popup').attr('href', dataZoomImg);
        if($(this).hasClass('zoomGalleryActive')){
          $(this).closest('li').find('.link-magnific-popup').addClass('zoomGalleryActive');
        };
      };
    });
    objSmallGallery.addClass('tt-magnific-popup').find('.link-magnific-popup').magnificPopup({
      type: 'image',
      gallery: {
        enabled: true,
        tCounter: '<span class="mfp-counter"></span>'
      },
      callbacks: {
        close: function() {
          setTimeout(function() {
            objSmallGallery.removeClass('tt-magnific-popup').find('.link-magnific-popup').remove();
          }, 200);

        }
      }
    });
    objSmallGallery.find('.link-magnific-popup.zoomGalleryActive').trigger('click');
  });
};

//sticky(product-05.html)
function ttAirSticky(ttwindowWidth){
  var airStickyObj =  blocks.ttAirSticky,
      tabObj =  blocks.ttCollapseBlock.find('.tt-collapse-title');

  if(ttwindowWidth >= 1024){
    airStickyObj.airStickyBlock({
      debug: false,
      stopBlock: '.airSticky_stop-block',
      offsetTop: 70,
    });
  } else if(airStickyObj.hasClass('airSticky_absolute')) {
    airStickyObj.removeClass('airSticky_absolute');
  };
  $document.on('resize scroll', tabObj, function () {
    airStickyObj.trigger('render.airStickyBlock');
  });
  tabObj.on('click', function() {
    setTimeout(function(){
      airStickyObj.trigger('render.airStickyBlock');
    }, 170);
  });
};
// img for ratio > 1
if (window.devicePixelRatio > 1) {
  var ttImgToReplace = $('.tt-retina');
  for (var i = 0, l = ttImgToReplace.length; i < l; i++) {
    var src = ttImgToReplace[i].src;
    src = src.replace(/\.(png|jpg|gif)+$/i, '@2x.$1');
    ttImgToReplace[i].src = src;
  };
};



/**
     * Stuck init. Properties: on/off
     * @value = 'off', default empty
     */
function initStuck(value) {
  if($stucknav.hasClass('disabled')) return;

  var value = value || false,
      ie = (getInternetExplorerVersion() !== -1) ? true : false;

  if (value === 'off') return false;
  var n = 0;
  $window.scroll(function() {
    var HeaderTop = $('header').innerHeight();
    var mh = $('header').innerHeight();
    var $hil = $('header').find('.tt-mobile-header-inline-stuck');
    if($hil.length && window.innerWidth < 1025){
      HeaderTop = $('.innerheadercontainer').length ? $('.innerheadercontainer').innerHeight() : $('header').innerHeight();
    }
    if ($window.scrollTop() > HeaderTop) {
      if ($stucknav.hasClass('stuck')) return false;

      if($hil.length && window.innerWidth < 1025){
        $('<div class="innerheadercontainer" style="height:'+mh+'px;"></div>').insertBefore('header');
        $stucknav.addClass('stuck').show();
        $hil.addClass('stuck').stop().hide().fadeIn().closest('header').addClass('headerisstuck');
      }
      else{
        $hil.length && $hil.addClass('stuck').closest('header').addClass('headerisstuck');
        $stucknav.hide();
        $stucknav.addClass('stuck');
        $('body').trigger('showStuck');
        window.innerWidth < 1025 ? $ttStuckParentMenu.append($ttMobileParentMenuChildren.detach()) : $ttStuckParentMenu.append($ttDesctopMenu.first().detach());
        $ttStuckParentCart.append($ttcartObj.detach());
        $ttStuckParentMulti.append($ttMultiObj.detach());
        $ttStuckParentAccount.append($ttAccountObj.detach());
        $ttStuckParentSearch.append($ttSearchObj.detach());

        if ($stucknav.find('.tt-stuck-cart-parent > .tt-cart > .dropdown').hasClass('open') || ie)
          $stucknav.stop().show();
        else
          $stucknav.stop().fadeIn(300);

      }
    } else {
      if (!$stucknav.hasClass('stuck')) return false;

      if($hil.length && window.innerWidth < 1025){
        $('.innerheadercontainer').length && $('.innerheadercontainer').remove();
        $stucknav.hide().removeClass('stuck');
        $hil.removeClass('stuck').removeAttr('style').closest('header').removeClass('headerisstuck');
        $ttDesctopParentMenu.append($ttDesctopMenu.first().detach());
      }
      else{
        $('.innerheadercontainer').length && $('.innerheadercontainer').remove();
        $hil.length && $hil.removeClass('stuck').closest('header').removeClass('headerisstuck');
        $stucknav.hide();
        $stucknav.removeClass('stuck');
        $('body').trigger('hideStuck');
        if (window.innerWidth < 1025) {
          $ttMobileParentMenu.append($ttMobileParentMenuChildren.detach());
          $ttMobileParentCart.append($ttcartObj.detach());
          $ttMobileParentMulti.append($ttMultiObj.detach());
          $ttMobileParentAccount.append($ttAccountObj.detach());
          $ttMobileParentSearch.append($ttSearchObj.detach());
          return false;
        }
        $ttDesctopParentMenu.append($ttDesctopMenu.first().detach());
        $ttDesctopParentCart.append($ttcartObj.detach());
        $ttDesctopParentMulti.append($ttMultiObj.detach());
        $ttDesctopParentAccount.append($ttAccountObj.detach());
        $ttDesctopParentSearch.append($ttSearchObj.detach());
      }
    }
  });
  $window.resize(function() {
    if(window.innerWidth < 1025 && $('header').find('.tt-mobile-header-inline-stuck').length) {
      var chs = $('header').find('.tt-mobile-parent-menu-icons');
      if(!chs.length) return false;
      if(!chs.children().length) return false;
      if(chs.children().first().children().length) return false;
      $ttMobileParentCart.append($ttcartObj.detach());
      $ttMobileParentSearch.append($ttSearchObj.detach());
      return false;
    }

    if (!$stucknav.hasClass('stuck')) return false;

    if (window.innerWidth < 1025) {
      $ttDesctopParentMenu.append($ttDesctopMenu.first().detach());
      $ttStuckParentMenu.append($ttMobileParentMenuChildren.detach());
    } else {
      if($('header').find('.tt-mobile-header-inline-stuck').length){
        var chs = $('header').find('.tt-mobile-parent-menu-icons');
        if(!chs.length) return false;
        if(!chs.children().length) return false;
        if(!chs.children().first().children().length) return false;
        $ttStuckParentMenu.append($ttDesctopMenu.first().detach());
        $ttStuckParentCart.append($ttcartObj.detach());
        $ttStuckParentMulti.append($ttMultiObj.detach());
        $ttStuckParentAccount.append($ttAccountObj.detach());
        $ttStuckParentSearch.append($ttSearchObj.detach());
        $('.tt-mobile-header').removeAttr('style');
        $('.innerheadercontainer').length && $('.innerheadercontainer').remove();
      }
      else{
        $ttMobileParentMenu.append($ttMobileParentMenuChildren.detach());
        $ttStuckParentMenu.append($ttDesctopMenu.first().detach());
      }
    }
  });
};
//header search
function mobileParentSearch() {
  if (window.innerWidth < 1025) {
    if ($ttMobileParentSearch.children().length) return false;
    if ($('.stuck').length) return false;
    $ttMobileParentSearch.append($ttSearchObj.detach());
  } else {
    if ($ttDesctopParentSearch.children().length) return false;
    if ($('.stuck').length) return false;
    $ttDesctopParentSearch.append($ttSearchObj.detach());
  };
};
//header cart
function mobileParentCart() {
  if (window.innerWidth < 1025) {
    if ($ttMobileParentCart.children().length) return false;
    if ($('.stuck').length) return false;
    $ttMobileParentCart.append($ttcartObj.detach());
  } else {
    if ($ttDesctopParentCart.children().length) return false;
    if ($('.stuck').length) return false;
    $ttDesctopParentCart.append($ttcartObj.detach());
  };
};
//header account
function mobileParentAccount() {
  if (window.innerWidth < 1025) {
    if ($ttMobileParentAccount.children().length) return false;
    if ($('.stuck').length) return false;
    if($('header').find('.tt-mobile-header-inline').length) return false;
    $ttMobileParentAccount.append($ttAccountObj.detach());
  } else {
    if ($ttDesctopParentAccount.children().length) return false;
    if ($('.stuck').length) return false;
    $ttDesctopParentAccount.append($ttAccountObj.detach());
  };
};
//header langue and currency(*all in one module)
function mobileParentMulti() {
  if (window.innerWidth < 1025) {
    if ($ttMobileParentMulti.children().length) return false;
    if ($('.stuck').length) return false;
    if($('header').find('.tt-mobile-header-inline').length) return false;
    $ttMobileParentMulti.append($ttMultiObj.detach());
  } else {
    if ($ttDesctopParentMulti.children().length) return false;
    if ($('.stuck').length) return false;
    $ttDesctopParentMulti.append($ttMultiObj.detach());
  };
};

/*
      header menu
    */
// header menu(hover)
(function toggle_header_menu() {
  var delay = header_menu_timeout,
      hoverTimer = header_menu_delay,
      timeout1 = false;

  var set_dropdown_maxH = function() {
    var wind_H = window.innerHeight,
        $ttDesctopMenu = $(this).find('.dropdown-menu'),
        menu_top = $ttDesctopMenu.get(0).getBoundingClientRect().top,
        menu_max_H = wind_H - menu_top,
        $ttDesctopMenu_H = $ttDesctopMenu.innerHeight(),
        $btn_top = blocks.ttBackToTop;

    if ($ttDesctopMenu_H > menu_max_H) {
      var $body = $('body'),
          $stuck = $('.tt-stuck-nav');
      $ttDesctopMenu.css({
        maxHeight: menu_max_H - 20,
        overflow: 'auto'
      });

      var scrollWidth = function() {
        var $div = $('<div>').css({
          overflowY: 'scroll',
          width: '50px',
          height: '50px',
          visibility: 'hidden'
        });

        $body.append($div);
        var scrollWidth = $div.get(0).offsetWidth - $div.get(0).clientWidth;
        $div.remove();

        return scrollWidth;
      };

      $body.css({
        overflowY: 'hidden',
        paddingRight: scrollWidth()
      });

      $stuck.css({
        paddingRight: scrollWidth()
      });

      $btn_top.css({
        right: scrollWidth()
      });
      
      $('.tt-header-static').length && $('.tt-header-static').css({'padding-right': scrollWidth()});
    }
  };

  if ($ttDesctopMenu.length > 0) {
    $('.tt-megamenu-submenu li').each(function(){
      if($(this).find('img').length){
        $(this).closest('ul').addClass('tt-sub-img');
      }
    });
    $ttDesctopMenu.find('.dropdown-menu').each(function(){
      if($(this).length){
        $(this).closest('.dropdown').addClass('tt-submenu');
      }
    });
    
    $(document).on({
      mouseenter: function() {
        var $this = $(this),
            that = this,
            windowW = window.innerWidth || $(window).width();

        if (windowW > 1025 && $body.hasClass('touch-device')) {
          $ttDesctopMenu.find('.dropdown.tt-submenu > a').one("click", false);
        };

        timeout1 = setTimeout(function () {

          var $carousel = $this.find('.tt-menu-slider'),
              $ttDesctopMenu = $this.find('.dropdown-menu');


          $this.addClass('active')
          .find(".dropdown-menu")
          .stop()
          .addClass('hover')
          .fadeIn(hoverTimer);

          if($ttDesctopMenu.length & !$ttDesctopMenu.hasClass('one-col')) {
            set_dropdown_maxH.call(that);
          }

          if($carousel.length) {
            if(!$carousel.hasClass('slick-initialized')) {
              $carousel.slick({
                dots: false,
                arrows: true,
                infinite: true,
                speed: 300,
                slidesToShow: 3,
                slidesToScroll: 3,
                adaptiveHeight: true
              });
            }
          };
          $carousel.slick('setPosition');

        }, delay);

      },
      mouseleave: function(e) {
        var $this = $(this),
            $dropdown = $this.find(".dropdown-menu");

        if($(e.target).parents('.dropdown-menu').length && !$(e.target).parents('.tt-megamenu-submenu').length && !$(e.target).parents('.one-col').length) return;

        if(timeout1 !== false) {
          clearTimeout(timeout1);
          timeout1 = false;
        }

        if($dropdown.length) {
          $dropdown.stop().fadeOut({duration: 0, complete: function() {
            $this.removeClass('active')
            .find(".dropdown-menu")
            .removeClass('hover');
          }});
        } else {
          $this.removeClass('active')
          .find(".dropdown-menu")
          .removeClass('hover');
        }

        $dropdown.removeAttr('style');
        $('.tt-header-static').length && $('.tt-header-static').removeAttr('style');

        $body.removeAttr('style');

        $('.tt-stuck-nav').css({
          paddingRight: 'inherit'
        });

        blocks.ttBackToTop.css({
          right: 0
        });
      }
    }, '.tt-desctop-menu li');

    $('.multicolumn ul li').hover(function() {
      var $ul = $(this).find('ul:first');

      if ($ul.length) {
        var windW = window.innerWidth,
            windH = window.innerHeight,
            ulW = parseInt($ul.css('width'), 10),
            thisR = this.getBoundingClientRect().right,
            thisL = this.getBoundingClientRect().left;

        if (windW - thisR < ulW) {
          $ul.removeClass('left').addClass('right');
        } else if (thisL < ulW) {
          $ul.removeClass('right').addClass('left');
        } else {
          $ul.removeClass('left right');
        }
        $ul.stop(true, true).fadeIn(300);
      }
    }, function() {
      $(this).find('ul:first').stop(true, true).fadeOut(300).removeAttr('style');
    });

    $('.tt-megamenu-submenu li').hover(function() {
      var $ul = $(this).find('ul:first');

      if ($ul.length) {
        var $dropdownMenu = $(this).parents('.dropdown').find('.dropdown-menu'),
            dropdown_left = $dropdownMenu.get(0).getBoundingClientRect().left,
            dropdown_Right = $dropdownMenu.get(0).getBoundingClientRect().right,
            dropdown_Bottom = $dropdownMenu.get(0).getBoundingClientRect().bottom,
            ulW = parseInt($ul.css('width'), 10),
            thisR = this.getBoundingClientRect().right,
            thisL = this.getBoundingClientRect().left;

        if (dropdown_Right - 20 - thisR < ulW) {
          $ul.removeClass('left').addClass('right');
        } else if (thisL - ulW - 20 < dropdown_left) {
          $ul.removeClass('right').addClass('left');
        } else {
          $ul.removeClass('left right');
        }

        $ul.stop(true, true).delay(150).fadeIn(300);

        var ul_bottom = $ul.get(0).getBoundingClientRect().bottom;

        if (dropdown_Bottom < ul_bottom) {
          var move_top = dropdown_Bottom - ul_bottom;
          $ul.css({
            top: move_top
          });
        }
      }
    }, function() {
      $(this).find('ul:first').stop(true, true).fadeOut(300).removeAttr('style');
    });

    $('.megamenu div').hover(function() {
      $(this).children('.tt-title-submenu').addClass('active');
    }, function() {
      $(this).children('.tt-title-submenu').removeClass('active');
    });

  }

  function onscroll_dropdown_hover() {
    var $dropdown_active = $('.dropdown.hover');

    if (!$dropdown_active.find('.dropdown-menu').not('.one-col').length) return;

    if ($dropdown_active.length)
      set_dropdown_maxH.call($dropdown_active);
  };
  $(window).on('scroll', function() {
    onscroll_dropdown_hover();
  });
})();

/*!
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2006, 2014 Klaus Hartl
 * Released under the MIT license
 */
(function (factory) {
  if (typeof define === 'function' && define.amd) {
    define(['jquery'], factory);
  } else if (typeof exports === 'object') {
    module.exports = factory(require('jquery'));
  } else {
    factory(jQuery);
  }
}(function ($) {

  var pluses = /\+/g;

  function encode(s) {
    return config.raw ? s : encodeURIComponent(s);
  }

  function decode(s) {
    return config.raw ? s : decodeURIComponent(s);
  }

  function stringifyCookieValue(value) {
    return encode(config.json ? JSON.stringify(value) : String(value));
  }

  function parseCookieValue(s) {
    if (s.indexOf('"') === 0) {
      s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
    }

    try {
      s = decodeURIComponent(s.replace(pluses, ' '));
      return config.json ? JSON.parse(s) : s;
    } catch(e) {}
  }

  function read(s, converter) {
    var value = config.raw ? s : parseCookieValue(s);
    return $.isFunction(converter) ? converter(value) : value;
  }

  var config = $.cookie = function (key, value, options) {

    if (arguments.length > 1 && !$.isFunction(value)) {
      options = $.extend({}, config.defaults, options);

      if (typeof options.expires === 'number') {
        var days = options.expires, t = options.expires = new Date();
        t.setMilliseconds(t.getMilliseconds() + days * 864e+5);
      }

      return (document.cookie = [
        encode(key), '=', stringifyCookieValue(value),
        options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
        options.path    ? '; path=' + options.path : '',
        options.domain  ? '; domain=' + options.domain : '',
        options.secure  ? '; secure' : ''
      ].join(''));
    }

    var result = key ? undefined : {},
        cookies = document.cookie ? document.cookie.split('; ') : [],
        i = 0,
        l = cookies.length;

    for (; i < l; i++) {
      var parts = cookies[i].split('='),
          name = decode(parts.shift()),
          cookie = parts.join('=');

      if (key === name) {
        result = read(cookie, value);
        break;
      }

      if (!key && (cookie = read(cookie)) !== undefined) {
        result[name] = cookie;
      }
    }

    return result;
  };

  config.defaults = {};

  $.removeCookie = function (key, options) {
    $.cookie(key, '', $.extend({}, options, { expires: -1 }));
    return !$.cookie(key);
  };

}));

function subscribeErrorHandler(){
  if($('.errors').length == 0) return false;
  $('[type="email"]').on('focus', function(){
    $(this).unbind().closest('form').find('.errors').length && $(this).closest('form').find('.errors').remove();
  })
}
subscribeErrorHandler();

/* Sections */
var hoverColors = {
  params: { 
    baseColor: 'data-c',
    activeColor: 'data-ac',
    bgBaseColor: 'data-bgc',
    bgActiveColor: 'data-abgc',
    borderBaseColor: 'data-borc',
    borderActiveColor: 'data-aborc',
  },
  init: function(){
    var attrName = this.params;
    var he = $('[data-hovercolors]');
    if(he.length == 0) return false;
    he.each(function(){
      hoverColors.getCurrentColors($(this), attrName.baseColor, attrName.bgBaseColor, attrName.borderBaseColor);
    });
  },
  initEvents: function(){
    var attrName = this.params;
    $('body').on({
      mouseenter: function(){
        hoverColors.getCurrentColors($(this), attrName.activeColor, attrName.bgActiveColor, attrName.borderActiveColor );
      },
      mouseleave: function(){
        hoverColors.getCurrentColors($(this), attrName.baseColor, attrName.bgBaseColor, attrName.borderBaseColor );
      }}, '[data-hovercolors]'
    );
  },
  getCurrentColors: function(_, attr1, attr2, attr3){
    hoverColors.setCurrentColors(_, attr1, attr2, attr3);
    
    var ac = _.find('['+ attr1 +']');
    if(ac.length > 0) {
      ac.each(function(){
        var c = $(this).attr(attr1);
        $(this).css('color', c);
      });
    }
    
    ac = _.find('['+ attr2 +']');
    if(ac.length > 0) {
      ac.each(function(){
        hoverColors.setCurrentBgColor($(this), attr2);
      });
    }

    ac = _.find('['+ attr3 +']');
    if(ac.length > 0) {
      ac.each(function(){
        hoverColors.setCurrentBorderColor($(this), attr3);
      });
    }
  },
  setCurrentBgColor: function(_, attr){
    var a = _.attr(attr);
    _.css({"background": a});
  },
  setCurrentBorderColor: function(_, attr){
    var a = _.attr(attr);
    if (typeof a !== typeof undefined && a !== false) {
      _.css('border-color', a);
    }
  },
  setCurrentColors: function(_, attr1, attr2, attr3){
    var c = _.attr(attr1);
    _.css('color', c);

    hoverColors.setCurrentBgColor(_, attr2);
    hoverColors.setCurrentBorderColor(_, attr3);

    return false;
  }
}
hoverColors.initEvents();

// Countdown
function countDown(showZero) {
  if ($(".tt-countdown").length) {

    var showZero = showZero || false;

    $(".tt-countdown").each(function() {
      var $this = $(this),
          date = $this.data('date'),
          nextYear = false,
          tz = $('[name=timezone]');
      
      if(typeof moment === "function" && tz.length) nextYear = moment.tz($this.data('date'), tz.attr('content'));

      if (date = date.split('-')) {
        date = date.join('/');
      } else return;

      var timezone = nextYear ? nextYear.toDate() : date;

      $this.countdown(timezone, function(e) {
        var format = '<span class="countdown-row">';

        function addFormat(func, timeNum, showZero) {
          if(timeNum === 0 && !showZero) return;

          func(format);
        };

        addFormat(function() {
          format += '<span class="countdown-section">'
          + '<span class="countdown-amount">' + e.offset.totalDays + '</span>'
          + '<span class="countdown-period">' + set_day + '</span>'
          + '</span>';
        }, e.offset.totalDays, showZero);

        addFormat(function() {
          format += '<span class="countdown-section">'
          + '<span class="countdown-amount">' + e.offset.hours + '</span>'
          + '<span class="countdown-period">' + set_hour + '</span>'
          + '</span>';
        }, e.offset.hours, showZero);

        addFormat(function() {
          format += '<span class="countdown-section">'
          + '<span class="countdown-amount">' + e.offset.minutes + '</span>'
          + '<span class="countdown-period">' + set_minute + '</span>'
          + '</span>';
        }, e.offset.minutes, showZero);

        addFormat(function() {
          format += '<span class="countdown-section">'
          + '<span class="countdown-amount">' + e.offset.seconds + '</span>'
          + '<span class="countdown-period">' + set_second + '</span>'
          + '</span>';
        }, e.offset.seconds, showZero);

        format += '</span>';

        $(this).html(format);
      });
    });
  }
};

$(document).ready(function() {

  "use strict";

  countDown(true);

  initProductOptions();
});

/* products options */
function initProductOptions(){
  $('body').on('change', '.productitem-option1-combo-js select', function(e){
    var $this = $(this).find('option:selected');
    setNewData($this, true);
    var val = $this.attr("data-tag") + '-js';
    var _parent = $this.closest('.tt-option-block');
    val = _parent.optionsSetParams(val, '.productitem-option2-js');
    _parent.optionsSetParams(val, '.productitem-option3-js');
  })
  $('body').on('click', '.productitem-option1-js a', function(e){
    var $this = $(this);
    optionsHandler(e, $this);
    var val = $this.parent().attr("data-tag") + '-js';
    var _parent = $this.closest('.tt-option-block');
    val = _parent.optionsSetParams(val, '.productitem-option2-js');
    _parent.optionsSetParams(val, '.productitem-option3-js');
  })
  $('body').on('click', '.productitem-option2-js a', function(e){
    var $this = $(this)
    optionsHandler(e, $this);
    var val = $this.parent().attr("data-tag") + '-js';
    var _parent = $this.closest('.tt-option-block');
    _parent.optionsSetParams(val, '.productitem-option3-js');
  });
  $('body').on('click', '.productitem-option3-js a', function(e){
    optionsHandler(e, $(this));
  });
}
function optionsHandler(e, $this){
  e.preventDefault();
  if($this.parent().hasClass('active')) return false;
  setNewData($this);
}
$.fn.optionsSetParams = function(val, str){
  var _opt = this.find(str);
  if(_opt.length == 0) return false;
  _opt.show().find('li').each(function(){ $(this).hide().removeClass('active') });
  if(_opt.find('[data-current-option="'+val+'"]').length == 0) return false;
  _opt.find('[data-current-option="'+val+'"]').show().first().addClass('active');
  return _opt.find('.active').find('a').parent().attr("data-tag") + '-js';
}
function setNewData($this, combobox){
  if (combobox === undefined) {
    combobox = false;
  }
  var _parent = combobox ? $this : $this.parent();
  if(!combobox){
    _parent.parent().find(".active").removeClass('active');
    _parent.addClass('active');
  }

  var availability = Boolean(_parent.data('variant_availability'));
  var $pr_parent = $this.closest('.options-js');

  $pr_parent.find('input').val(_parent.attr('data-var_id'));
  
  var img_src = _parent.attr('data-img');
  if(img_src != ''){
    if($(window).width() > '1024' && $pr_parent.find('.tt-img-roll-over').length) {
      $pr_parent.find('.tt-img-roll-over img').attr('src', img_src).removeAttr('srcset data-src data-srcset').removeClass('lazyload');
    }
    else{
      $pr_parent.find('.tt-img img').attr('src', img_src).removeAttr('srcset data-src data-srcset').removeClass('lazyload');
    }
    if($pr_parent.find('[data-mainimage]').length){
      $pr_parent.find('[data-mainimage]').removeAttr('data-mainimage').parent().css('height', 'auto');
    }
  }

  var $btn = $pr_parent.find('.addtocart-item-js');
  $btn.attr('href', '/cart/add.js?quantity=1&id='+_parent.attr('data-var_id'));
  
  if($pr_parent.find('.compare-js').length){
  	$pr_parent.find('.compare-js').attr('data-compareid', _parent.attr('data-var_id'));
    $(window).trigger( "compareevent" );
  }
  
  availability ? $btn.html(_parent.attr('data-buttonname')).removeClass('disable') : $btn.html(unavailable_text).addClass('disable');

  var labelsale = $pr_parent.find('.tt-label-sale');
  var mainprice = $pr_parent.find('.tt-price span:first-child');
  var oldprice = $pr_parent.find('.old-price');
  mainprice.html(Shopify.formatMoney(_parent.attr('data-price'), money_format));
  var compprice = String(_parent.attr('data-compprice'));
  oldprice.html(Shopify.formatMoney(compprice, money_format));
  if(!compprice) {
    !oldprice.hasClass('hide') && oldprice.addClass('hide');
    mainprice.hasClass('new-price') && mainprice.removeClass('new-price');
    labelsale.length && labelsale.hide();
  }
  else {
    var _mainprice = Number(_parent.attr('data-price'));
    compprice = Number(compprice);
    if(_mainprice >= compprice){
      !oldprice.hasClass('hide') && oldprice.addClass('hide');
      mainprice.hasClass('new-price') && mainprice.removeClass('new-price');
      labelsale.length && labelsale.hide();
    }
    else{
      oldprice.hasClass('hide') && oldprice.removeClass('hide');
      !mainprice.hasClass('new-price') && mainprice.addClass('new-price');
      var per = Math.round(100 - (_mainprice / compprice)*100)+'%';
      labelsale.length && labelsale.show().find('.thumb_percent').html(per);
    }
  }
  
  
    /*  variant_price = labelsale.data('price')
      percent = Math.round(100 - (variant.price / variant.compare_at_price)*100);*/
  
  
  $('body').trigger('refreshCurrency');
}
